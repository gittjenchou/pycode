

file object = open(file_name [, access_mode][, buffering])

#Here is paramters detail:
#   file_name   :   The file_name argument is a string value that contains the name of the file that you want to access.
#   access_mode :   The access_mode determines the mode in which the file has to be opened ie. read, write append etc. 
#                   A complete list of possible values is given below in the table. This is optional parameter and the default file access mode is read (r)
#   buffering   :   If the buffering value is set to 0, no buffering will take place. 
#                   If the buffering value is 1, line buffering will be performed while accessing a file. 
#                   If you specify the buffering value as an integer greater than 1, then buffering action will be performed with the indicated buffer size. 
#                   This is optional paramter.


#   r       Opens a file for reading only. The file pointer is placed at the beginning of the file. This is the default mode.
#   rb      Opens a file for reading only in binary format. The file pointer is placed at the beginning of the file. This is the default mode.
#   r+      Opens a file for both reading and writing. The file pointer will be at the beginning of the file.
#   rb+     Opens a file for both reading and writing in binary format. The file pointer will be at the beginning of the file.
#   w       Opens a file for writing only. Overwrites the file if the file exists. If the file does not exist, creates a new file for writing.
#   wb      Opens a file for writing only in binary format. Overwrites the file if the file exists. 
#           If the file does not exist, creates a new file for writing.
#   w+      Opens a file for both writing and reading. Overwrites the existing file if the file exists. 
#           If the file does not exist, creates a new file for reading and writing.
#   wb+     Opens a file for both writing and reading in binary format. Overwrites the existing file if the file exists. 
#           If the file does not exist, creates a new file for reading and writing.
#   a       Opens a file for appending. The file pointer is at the end of the file if the file exists. 
#           That is, the file is in the append mode. If the file does not exist, it creates a new file for writing.
#   ab      Opens a file for appending in binary format. The file pointer is at the end of the file if the file exists. 
#           That is, the file is in the append mode. If the file does not exist, it creates a new file for writing.
#   a+      Opens a file for both appending and reading. The file pointer is at the end of the file if the file exists. 
#           The file opens in the append mode. If the file does not exist, it creates a new file for reading and writing.
#   ab+     Opens a file for both appending and reading in binary format. The file pointer is at the end of the file if the file exists. 
#           The file opens in the append mode. If the file does not exist, it creates a new file for reading and writing.

#   Once a file is opened and you have one file object, you can get various information related to that file.
#   Here is a list of all attributes related to file object:
#   Attribute          Description
#   file.closed        Returns true if file is closed, false otherwise.
#   file.mode          Returns access mode with which file was opened.
#   file.name          Returns name of the file.
#   file.softspace     Returns false if space explicitly required with print, true otherwise.

fileObject.close();
fileObject.write(string);
fileObject.read([count]);


os.rename(current_file_name, new_file_name)
os.remove(file_name)
os.mkdir("newdir")
os.chdir("newdir")
os.getcwd()
os.rmdir('dirname')


